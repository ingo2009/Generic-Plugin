<?php
// TODO: find out, ask TS forum, or so…
// namespace Generic , yes or no

/*
 * Gadget.php
 *
 * Lives independent from the Model\Plugin object
 */

// TODO: add Log object if available, good for debugging
// TODO: add persistennce object, good for saving data

class Gadget
{
	// since the constructor us never getting called, we need all member vars to be static

	// comes from TS
	protected	static	$gadgetObj = NULL;

    // main constructor of Generic\Gadget, probably superflous…
	// since it is not getting called by TS system
	// but what the heck, I leave it here
    public function __construct($object)
    {
		// to see if we are alive
		message("Gadget:: constructor()");

		$this->Init($object);
    }

    // nothing much to do yet
    protected function Init($object)
    {
		message("Gadget::Init(), object = ".$object);

		// access page params, might come in handy later…
//		if( $object )
//			$page = $object['page'];

// TODO: initialize object

	}

	public function RunGadget()
	{
        $greetinx = "Greetings from the Generic Gadget…";
        $br = "<br />";

		message("Gadget::RunGadget(), rendering now");

		// we do not have an object, so pass NULL
		self::Init(NULL);

		// out with the greetinx
		echo $br.$br.$greetinx.$br.$br."<i>Generated by Gadget</i><hr>";

// TODO: add some fancy code here for your gadget

	}

}
